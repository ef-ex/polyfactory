<?xml version="1.0" encoding="UTF-8"?>
<pythonPanelDocument>
  <!-- This file contains definitions of Python interfaces and the
 interfaces menu.  It should not be hand-edited when it is being
 used by the application.  Note, that two definitions of the
 same interface or of the interfaces menu are not allowed
 in a single file. -->
  <interface name="pf_testpanel" label="PF Test Panel" icon="MISC_python" showNetworkNavigationBar="false" help_url="">
    <script><![CDATA[########################################################################
# Replace the sample code below with your own to create a
# PyQt5 or PySide2 interface.  Your code must define an
# onCreateInterface() function that returns the root widget of
# your interface.
#
# The 'hutil.Qt' is for internal-use only.
# It is a wrapper module that enables the sample code below to work with
# either a Qt4 or Qt5 environment for backwards-compatibility.
#
# When developing your own Python Panel, import directly from PySide2
# or PyQt5 instead of from 'hutil.Qt'.
########################################################################

#
# SAMPLE CODE
#
from PySide2 import QtWidgets

def createInterface():
     # Create a calendar widget and a label.
     calendar = QtWidgets.QCalendarWidget()
     title = QtWidgets.QLabel("My Calendar")

     # Create a widget with a vertical box layout.
     # Add the label and calendar to the layout.
     root_widget = QtWidgets.QWidget()
     layout = QtWidgets.QVBoxLayout()
     layout.addWidget(title)
     layout.addWidget(calendar)
     root_widget.setLayout(layout)

     # Return the top-level widget.
     return root_widget]]></script>
    <includeInPaneTabMenu menu_position="0" create_separator="false"/>
    <includeInToolbarMenu menu_position="0" create_separator="false"/>
    <help><![CDATA[]]></help>
  </interface>
</pythonPanelDocument>
